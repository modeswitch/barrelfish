/*
 * Copyright (c) 2007, 2008, 2009, 2010, ETH Zurich.
 * All rights reserved.
 *
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * ETH Zurich D-INFK, Haldeneggsteig 4, CH-8092 Zurich. Attn: Systems Group.
 */

interface ether "Generic Ethernet Driver" {
    call register_buffer(cap buf);
    response new_buffer_id(errval err, uint64 idx);

    call transmit_packet(uint64 nr_pbufs,
                         uint64 buffer_id,
                         uint64 len,
                         uint64 offset,
                         uint64 client_data);
    response tx_done(uint64 client_data);

    call get_mac_address();
    response get_mac_address_response(uint64 hwaddr);

    call register_pbuf(uint64 pbuf_id,
                       uint64 paddr,
                       uint64 len);
    response packet_received(uint64 pbuf_id,
                             uint64 paddr,
                             uint64 pbuf_len,
                             uint64 packet_len);
/*
    call metadata_size_request();
    response metadata_size(uint64 size);

    call register_metadata_mem(uint64 buffer_id, 
			       cap mem);
    response registered_metadata_mem(errval_t err,
				     uint64 buffer_id);

*/
          call print_statistics();
          call print_cardinfo();
          call debug_status(uint8 state);
};
